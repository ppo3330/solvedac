#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

long long int n, q;
vector<long long int> arr;
long long int dp[1001];

long long int qry1(int a, int b) {
	dp[0] = 0;
	for (int i = 1; i <= n; i++) {
		dp[i] = dp[i - 1] + arr[i - 1];
	}
	long long int c = arr[a - 1];
	std::swap(arr[a - 1], arr[b - 1]);
	return dp[b] - dp[a - 1];
}

long long int qry2(int a, int b, int c, int d) {
	dp[0] = 0;
	for (int i = 1; i <= n; i++) {
		dp[i] = dp[i-1]+ arr[i - 1];
	}
	return dp[b] - dp[a - 1] - (dp[d] - dp[c-1]);
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> n >> q;
	long long int a;
	for (int i = 1; i <= n; i++) {
		dp[i] = 0;
	}
	for (int i = 0; i < n; i++) {
		cin >> a;
		arr.push_back(a);
	}

	for (int i = 0; i < q; i++) {
		int f;
		int a, b, c, d;
		cin >> f;
		if (f == 1) {
			cin >> a >> b;
			cout << qry1(a, b);
		}
		if (f == 2) {
			cin >> a >> b >> c >> d;
			cout << qry2(a, b,c,d);
		}
		cout << "\n";
	}
}

