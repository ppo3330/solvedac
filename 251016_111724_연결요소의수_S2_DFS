	#include <iostream>
	#include <vector>
	#include <algorithm>

	using namespace std;

	int N, M, u, v;
	int grap[1001][1001];
	int visit[1001];

	void dfs(int n) {
		visit[n] = 1;
		for (int i = 0; i < N; i++) {
			if (grap[n][i] == 1 && visit[i] == 0) {
				dfs(i);
			}
		}
	}

	int main() {
		ios_base::sync_with_stdio(false);
		cin.tie(NULL);
		
		cin >> N >> M;

		for (int i = 0; i < N; i++) {
			visit[i] = 0;
		}

		for (int i = 0; i < M; i++) {
			cin >> u >> v;
			grap[--u][--v] = 1;
			grap[v][u] = 1;
		}
		int result = 0;

		for (int i = 0; i < N; i++) {
			if (visit[i] == 0) {
				result++;
				dfs(i);
			}
		}

		cout << result;
	}
